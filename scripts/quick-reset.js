#!/usr/bin/env node

/**
 * –ë—ã—Å—Ç—Ä—ã–π —Å–±—Ä–æ—Å –ë–î —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
 * Quick database reset with admin creation
 */

require('dotenv').config();
const pool = require('../src/config/database');

async function quickReset() {
  console.log('üóëÔ∏è  –ë–´–°–¢–†–´–ô –°–ë–†–û–° –ë–î / QUICK DATABASE RESET');
  console.log('==========================================');

  try {
    // –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π
    await pool.query('SET FOREIGN_KEY_CHECKS = 0');

    // –û—á–∏—â–∞–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã
    const tablesToClear = [
      'ticket_messages',
      'ticket_history', 
      'ticket_attachments',
      'ticket_notes',
      'task_comments',
      'employee_tasks',
      'tickets',
      'requesters',
      'users',
      'departments'
    ];

    for (const table of tablesToClear) {
      try {
        await pool.query(`DELETE FROM ${table}`);
        await pool.query(`ALTER TABLE ${table} AUTO_INCREMENT = 1`);
        console.log(`‚úÖ –û—á–∏—â–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞: ${table}`);
      } catch (error) {
        console.log(`‚ö†Ô∏è  –¢–∞–±–ª–∏—Ü–∞ ${table} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –æ—à–∏–±–∫–∞: ${error.message}`);
      }
    }

    // –í–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π
    await pool.query('SET FOREIGN_KEY_CHECKS = 1');

    // –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    const [result] = await pool.query(
      `INSERT INTO users (email, password, first_name, last_name, role, is_active, created_at, updated_at)
       VALUES (?, ?, ?, ?, 'admin', 1, NOW(), NOW())`,
      ['admin@helpdesk.kz', 'admin123', '–°–∏—Å—Ç–µ–º–∞', '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä']
    );

    console.log('\nüéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞!');
    console.log('Database successfully cleared and configured!');
    console.log('\nüë§ –°–æ–∑–¥–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:');
    console.log(`üìß Email: admin@helpdesk.kz`);
    console.log(`üîë –ü–∞—Ä–æ–ª—å: admin123`);
    console.log(`üë§ –ò–º—è: –°–∏—Å—Ç–µ–º–∞ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä`);
    console.log(`üîë –†–æ–ª—å: admin`);
    console.log(`üÜî ID: ${result.insertId}`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
    process.exit(1);
  }

  process.exit(0);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±—Ä–æ—Å
quickReset();