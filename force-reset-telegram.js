#!/usr/bin/env node

/**
 * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ Telegram API –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã 409 Conflict
 */

require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');

const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;

if (!TELEGRAM_BOT_TOKEN) {
  console.error('‚ùå TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
  process.exit(1);
}

async function forceResetTelegramBot() {
  console.log('üîß –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ Telegram API –∏ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫...');
  
  // –£–¥–∞–ª–µ–Ω–∏–µ lock —Ñ–∞–π–ª–∞
  const fs = require('fs');
  const path = require('path');
  const lockFile = path.join(__dirname, 'src/services/telegramBot/.telegram-bot.lock');
  
  console.log('0Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ lock —Ñ–∞–π–ª–∞...');
  if (fs.existsSync(lockFile)) {
    console.log('   üîì –£–¥–∞–ª–µ–Ω–∏–µ lock —Ñ–∞–π–ª–∞...');
    fs.unlinkSync(lockFile);
    console.log('   ‚úÖ Lock —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω');
  } else {
    console.log('   ‚úÖ Lock —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω');
  }
  
  try {
    // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –±–æ—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
    const bot = new TelegramBot(TELEGRAM_BOT_TOKEN, { polling: false, webHook: false });
    
    console.log('1Ô∏è‚É£ –£–¥–∞–ª–µ–Ω–∏–µ webhook...');
    try {
      const webhookInfo = await bot.getWebHookInfo();
      if (webhookInfo.url) {
        console.log(`   –ù–∞–π–¥–µ–Ω –∞–∫—Ç–∏–≤–Ω—ã–π webhook: ${webhookInfo.url}`);
        await bot.deleteWebHook();
        console.log('   ‚úÖ Webhook —É–¥–∞–ª–µ–Ω');
      } else {
        console.log('   ‚úÖ Webhook –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }
    } catch (error) {
      console.log(`   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ webhook: ${error.message}`);
    }
    
    console.log('2Ô∏è‚É£ –û—á–∏—Å—Ç–∫–∞ –æ—á–µ—Ä–µ–¥–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...');
    try {
      // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –Ω–∞–∫–æ–ø–∏–≤—à–∏–µ—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
      let updates = await bot.getUpdates({ limit: 100 });
      let totalCleared = 0;
      
      while (updates.length > 0) {
        totalCleared += updates.length;
        const lastUpdateId = updates[updates.length - 1].update_id;
        updates = await bot.getUpdates({ offset: lastUpdateId + 1, limit: 100 });
      }
      
      if (totalCleared > 0) {
        console.log(`   ‚úÖ –û—á–µ—Ä–µ–¥—å –æ—á–∏—â–µ–Ω–∞ (—É–¥–∞–ª–µ–Ω–æ ${totalCleared} –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π)`);
      } else {
        console.log('   ‚úÖ –û—á–µ—Ä–µ–¥—å —É–∂–µ –ø—É—Å—Ç–∞');
      }
    } catch (error) {
      console.log(`   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –æ—á–µ—Ä–µ–¥–∏: ${error.message}`);
    }
    
    console.log('3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞...');
    try {
      const me = await bot.getMe();
      console.log(`   ‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω: @${me.username} (${me.first_name})`);
    } catch (error) {
      console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ: ${error.message}`);
    }
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –±–æ—Ç
    await bot.close();
    
    console.log('4Ô∏è‚É£ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ—á–∏—Å—Ç–∫–∏...');
    console.log('   ‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤ (10 —Å–µ–∫—É–Ω–¥)...');
    await new Promise(resolve => setTimeout(resolve, 10000));
    
    console.log('‚úÖ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    console.log('üí° –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: npm start');
    console.log('üí° –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: npm run dev');
    console.log('üí° –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å: npm run telegram:status');
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ:', error.message);
    console.log('üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:');
    console.log('   1. –ü–æ–¥–æ–∂–¥–∞—Ç—å 5-10 –º–∏–Ω—É—Ç');
    console.log('   2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞');
    console.log('   3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ Node.js –ø—Ä–æ—Ü–µ—Å—Å—ã');
    console.log('   4. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å: npm run telegram:status');
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã Node.js
console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö Node.js –ø—Ä–æ—Ü–µ—Å—Å–æ–≤...');

const { exec } = require('child_process');

if (process.platform === 'win32') {
  exec('tasklist /FI "IMAGENAME eq node.exe" /FO CSV', (error, stdout) => {
    if (!error) {
      const lines = stdout.split('\n').filter(line => line.includes('node.exe'));
      if (lines.length > 1) {
        console.log(`‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ ${lines.length} Node.js –ø—Ä–æ—Ü–µ—Å—Å–æ–≤`);
        console.log('üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–≤–µ—Ä—à–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º:');
        console.log('   taskkill /F /IM node.exe');
        console.log('   –ó–∞—Ç–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä –∑–∞–Ω–æ–≤–æ');
        console.log('');
      }
    }
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –æ—á–∏—Å—Ç–∫—É
    forceResetTelegramBot();
  });
} else {
  exec('ps aux | grep node', (error, stdout) => {
    if (!error) {
      const lines = stdout.split('\n').filter(line => line.includes('node') && !line.includes('grep'));
      if (lines.length > 1) {
        console.log(`‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ ${lines.length} Node.js –ø—Ä–æ—Ü–µ—Å—Å–æ–≤`);
        console.log('üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–≤–µ—Ä—à–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º:');
        console.log('   pkill -f node');
        console.log('   –ó–∞—Ç–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä –∑–∞–Ω–æ–≤–æ');
        console.log('');
      }
    }
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –æ—á–∏—Å—Ç–∫—É
    forceResetTelegramBot();
  });
}